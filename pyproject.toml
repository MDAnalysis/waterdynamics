[build-system]
requires = [
  "setuptools >= 40.9.0",
  "versioningit",
]
build-backend = "setuptools.build_meta"

[project]
name = "waterdynamics"
description = "Analysis of water dynamics in molecular dynamics trajectories and water interactions with other molecules."
license = {file = "LICENSE" }
authors = [
    {name = "MDAnalysis", email = "mdanalysis@numfocus.org"},
]
maintainers = [
    {name = "MDAnalysis", email = "mdanalysis@numfocus.org"},
]
classifiers = [
    "Development Status :: 6 - Mature",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "MDAnalysis>=2.1.0",
    "numpy>=1.22.3",
]
keywords = [
    "molecular simulations",
    "molecular dynamics",
    "water analysis",
]
dynamic = [
    "version",
]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-xdist>=2.5",
    "pytest-cov>=3.0",
    "MDAnalysisTests>=2.0.0"
]
doc = [
    "sphinx",
    "sphinx_rtd_theme",
]

[project.urls]
source = "https://github.com/MDAnalysis/waterdynamics"
documentation = "https://mdanalysis.org/waterdynamics"

[tool.setuptools.packages]
find = {namespaces = false, exclude=["devtools", "docs"]}

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "waterdynamics/tests",
]

[tool.black]
line-length = 80

[tool.versioningit]
default-version = "1+unknown"

[tool.versioningit.vcs]
method = "git"
# the below line expects tags to look like '1.0.2'.
# if prefixing with a v, e.g. 'v1.0.2', change it to ["v*"]
match = ["*"]

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.coverage.run]
omit = [
    # Omit the tests
    "*/tests/*",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 80

[tool.yapf]
COLUMN_LIMIT = 80
INDENT_WIDTH = 4
USE_TABS = false
